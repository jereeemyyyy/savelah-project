// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfilePictureScreen renders correctly 1`] = `
<View
  style={
    [
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      },
      {
        "backgroundColor": "#1f2937",
      },
    ]
  }
>
  <View
    style={
      [
        {
          "flexDirection": "row",
        },
        {
          "justifyContent": "flex-start",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#6366f1",
          "borderBottomLeftRadius": 16,
          "borderTopRightRadius": 16,
          "marginLeft": 16,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="20"
        bbWidth="20"
        color="white"
        data-slot="icon"
        fill="currentColor"
        focusable={false}
        height="20"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 20,
              "width": 20,
            },
          ]
        }
        tintColor="white"
        vbHeight={24}
        vbWidth={24}
        width="20"
      >
        <RNSVGGroup
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            clipRule={0}
            d="M11.03 3.97a.75.75 0 0 1 0 1.06l-6.22 6.22H21a.75.75 0 0 1 0 1.5H4.81l6.22 6.22a.75.75 0 1 1-1.06 1.06l-7.5-7.5a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 0 1 1.06 0Z"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            fillRule={0}
            propList={
              [
                "fillRule",
              ]
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <Text
    style={
      [
        {
          "fontSize": 36,
          "lineHeight": 40,
        },
        {
          "fontWeight": "700",
        },
        {
          "color": "#fff",
        },
        {
          "marginBottom": 16,
          "marginLeft": 16,
          "marginRight": 16,
          "marginTop": 16,
        },
      ]
    }
    testID="titleText"
  >
    Add a Profile Picture
  </Text>
  <Text
    style={
      [
        {
          "fontSize": 18,
          "lineHeight": 28,
        },
        {
          "color": "#9ca3af",
        },
        {
          "marginLeft": 16,
          "marginRight": 16,
        },
        {
          "marginBottom": 8,
          "marginTop": 8,
        },
      ]
    }
    testID="subtitleText"
  >
    Customize your profile by adding a Profile Picture!
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "marginBottom": 16,
        "marginTop": 16,
        "opacity": 1,
      }
    }
    testID="profilePictureButton"
  >
    <View
      style={
        [
          {
            "width": 144,
          },
          {
            "height": 144,
          },
          {
            "backgroundColor": "#e5e7eb",
          },
          {
            "borderBottomLeftRadius": 9999,
            "borderBottomRightRadius": 9999,
            "borderTopLeftRadius": 9999,
            "borderTopRightRadius": 9999,
          },
          {
            "alignItems": "center",
          },
          {
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text />
    </View>
  </View>
  <View
    style={
      [
        {
          "flexBasis": "0%",
          "flexGrow": 1,
          "flexShrink": 1,
        },
        {
          "alignItems": "center",
        },
        {
          "marginBottom": 16,
          "marginLeft": 16,
          "marginRight": 16,
          "marginTop": 16,
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#6366f1",
          "borderBottomLeftRadius": 4,
          "borderBottomRightRadius": 4,
          "borderTopLeftRadius": 4,
          "borderTopRightRadius": 4,
          "marginBottom": 16,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingTop": 12,
          "width": 80,
        }
      }
      testID="nextButton"
    >
      <Text
        style={
          [
            {
              "color": "#fff",
            },
          ]
        }
      >
        Next
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#6b7280",
          "borderBottomLeftRadius": 4,
          "borderBottomRightRadius": 4,
          "borderTopLeftRadius": 4,
          "borderTopRightRadius": 4,
          "opacity": 1,
          "paddingBottom": 12,
          "paddingTop": 12,
          "width": 80,
        }
      }
      testID="skipButton"
    >
      <Text
        style={
          [
            {
              "color": "#fff",
            },
          ]
        }
      >
        Skip
      </Text>
    </View>
  </View>
</View>
`;
