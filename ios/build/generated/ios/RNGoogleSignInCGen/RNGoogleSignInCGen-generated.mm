/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNGoogleSignInCGen.h"


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_signIn(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "signIn", @selector(signIn:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_configure(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "configure", @selector(configure:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_addScopes(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "addScopes", @selector(addScopes:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_playServicesAvailable(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "playServicesAvailable", @selector(playServicesAvailable:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_signInSilently(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "signInSilently", @selector(signInSilently:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_signOut(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "signOut", @selector(signOut:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_revokeAccess(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "revokeAccess", @selector(revokeAccess:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_clearCachedAccessToken(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "clearCachedAccessToken", @selector(clearCachedAccessToken:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_hasPreviousSignIn(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, BooleanKind, "hasPreviousSignIn", @selector(hasPreviousSignIn), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_getCurrentUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "getCurrentUser", @selector(getCurrentUser), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_getTokens(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getTokens", @selector(getTokens:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeGoogleSigninSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "getConstants", @selector(getConstants), args, count);
    }

  NativeGoogleSigninSpecJSI::NativeGoogleSigninSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["signIn"] = MethodMetadata {1, __hostFunction_NativeGoogleSigninSpecJSI_signIn};
        
        
        methodMap_["configure"] = MethodMetadata {1, __hostFunction_NativeGoogleSigninSpecJSI_configure};
        
        
        methodMap_["addScopes"] = MethodMetadata {1, __hostFunction_NativeGoogleSigninSpecJSI_addScopes};
        
        
        methodMap_["playServicesAvailable"] = MethodMetadata {1, __hostFunction_NativeGoogleSigninSpecJSI_playServicesAvailable};
        
        
        methodMap_["signInSilently"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_signInSilently};
        
        
        methodMap_["signOut"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_signOut};
        
        
        methodMap_["revokeAccess"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_revokeAccess};
        
        
        methodMap_["clearCachedAccessToken"] = MethodMetadata {1, __hostFunction_NativeGoogleSigninSpecJSI_clearCachedAccessToken};
        
        
        methodMap_["hasPreviousSignIn"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_hasPreviousSignIn};
        
        
        methodMap_["getCurrentUser"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_getCurrentUser};
        
        
        methodMap_["getTokens"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_getTokens};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeGoogleSigninSpecJSI_getConstants};
        
  }
} // namespace facebook::react
